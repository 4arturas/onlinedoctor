import type { Metadata } from "next";
import { Inter } from "next/font/google";
import Header from "@/app/components/Header";
import Footer from "@/app/components/Footer";
import {NextIntlClientProvider} from "next-intl";
import {getMessages, getTranslations, unstable_setRequestLocale} from "next-intl/server";
import {locales} from "@/app/i18n/config";

const inter = Inter({ subsets: ["latin"] });

/*export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};*/

type Props =
{
    children: React.ReactNode;
    params: { locale: string}
}

export function generateStaticParams()
{
    return locales.map( (locale) => ({locale}))
}

export async function generateMetadata({
    params: {locale}
}: Omit<Props, "children">) {
    const t = await  getTranslations({locale, namespace: "LocaleLayout"});
    return {
        title: t("title"),
    };
}

// export default function RootLayout({children,}: Readonly<{ children: React.ReactNode; }>) {
export default async function RootLayout({ children, params } : Props) {

    unstable_setRequestLocale(params.locale);

    const messages = await getMessages();
    return (
        <html lang={params.locale}>

        <body>
        <NextIntlClientProvider messages={messages}>
        <Header />
        {children}
        <Footer />
        </NextIntlClientProvider>
        </body>

        </html>
    );
}